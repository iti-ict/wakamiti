#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#

# configuration steps
db.define.connection.parameters=the database connection URL {url:text} using the user {username:text} and the password {password:text}
db.define.cleanup.document=At finish, the following SQL script is executed:
db.define.cleanup.file=At finish, the SQL script file {file} is executed

# script execution steps
db.action.script.document=the following SQL script is executed:
db.action.script.file=the SQL script file {file} is executed

# delete data execution steps
db.action.clear.table.all=the database table {word} is cleared
db.action.clear.table.row.one.column=* having {column:word} = {value:text} is|are deleted from the database table {table:word}
db.action.clear.table.row.two.columns=* having {column1:word} = {value1:text} and {column2:word} = {value2:text} is|are deleted from the database table {table:word}
db.action.delete.from.data=the following * (is|are) deleted from the database table {word}:
db.action.delete.from.xls=the content of the XLS file {file} (is) deleted from the database 
db.action.delete.from.csv=the content of the CSV file {csv:file} (is) deleted from the database table {table:word}

# insert data execution steps
db.action.insert.from.data=the following * (is|are) inserted into the database table {word}:
db.action.insert.from.xls=the content of the XLS file {file} (is) inserted into the database 
db.action.insert.from.csv=the content of the CSV file {csv:file} (is) inserted into the database table {table:word}

# data presence assertion steps
db.assert.table.exists.row.single.id=* identified by {id:text} exist(s) in the database table {table:word}
db.assert.table.not.exists.row.single.id=* identified by {id:text} do(es) not exist in the database table {table:word}
db.assert.table.exists.row.one.column=* having {column:word} = {value:text} exist(s) in the database table {table:word}
db.assert.table.not.exists.row.one.column=* having {column:word} = {value:text} do(es) not exist in the database table {table:word}
db.assert.table.count.row.one.column=the number of * having {column:word} = {value:text} in the database table {table:word} {matcher:long-assertion}
db.assert.table.exists.row.two.columns=* having {column1:word} = {value1:text} and {column2:word} = {value2:text} exist(s) in the database table {table:word}
db.assert.table.not.exists.row.two.columns=* having {column1:word} = {value1:text} and {column2:word} = {value2:text} do(es) not exists in the database table {table:word}
db.assert.table.count.row.two.columns=the number of * having {column1:word} = {value1:text} and {column2:word} = {value2:text} in the database table {table:word} {matcher:long-assertion}
db.assert.table.exists.sql.where=* satisfying the following SQL clause exist(s) in the database table {table:word}:
db.assert.table.not.exists.sql.where=* satisfying the following SQL clause do(es) not exist in the database table {table:word}:
db.assert.table.count.sql.where=the number of * satisfying the following SQL clause in the database table {table:word} {matcher:long-assertion}:
db.assert.table.exists.data=the following record(s) exist(s) in the database table {word}:
db.assert.table.not.exists.data=the following record(s) do(es) not exist in the database table {word}:
db.assert.table.count.data=the number of * satisfying the following * in the database table {table:word} {matcher:long-assertion}:
db.assert.table.exists.xls=the content of the XLS file {file} exists in the database
db.assert.table.not.exists.xls=the content of the XLS file {file} does not exist in the database
db.assert.table.exists.csv=the content of the CSV file {csv:file} exists in the database table {table:word}
db.assert.table.not.exists.csv=the content of the CSV file {csv:file} does not exist in the database table {table:word}
db.assert.table.empty=the database table {word} is empty
db.assert.table.not.empty=the database table {word} is not empty