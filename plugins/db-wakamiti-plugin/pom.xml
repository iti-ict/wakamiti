<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This Source Code Form is subject to the terms of the Mozilla Public
  ~ License, v. 2.0. If a copy of the MPL was not distributed with this
  ~ file, You can obtain one at https://mozilla.org/MPL/2.0/.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>es.iti.wakamiti</groupId>
        <artifactId>wakamiti-plugin-starter</artifactId>
        <version>${revision}</version>
        <relativePath>../../wakamiti-plugin-starter</relativePath>
    </parent>


    <artifactId>db-wakamiti-plugin</artifactId>
    <version>3.2.0-SNAPSHOT</version>

    <name>[Wakamiti Plugin] Database Steps</name>
    <description>Database steps for Wakamiti</description>
    <inceptionYear>2019</inceptionYear>


    <properties>
        <h2.version>2.2.224</h2.version>
        <test.containers>1.19.5</test.containers>

        <wakamiti-engine.version>2.6.0-SNAPSHOT</wakamiti-engine.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.rubiconproject.oss</groupId>
            <artifactId>jchronic</artifactId>
            <version>0.2.8</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.2.3</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jsqlparser</groupId>
            <artifactId>jsqlparser</artifactId>
            <version>4.8</version>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>es.iti.wakamiti</groupId>
            <artifactId>wakamiti-junit</artifactId>
            <version>${wakamiti-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>4.11.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.jdbc.jdbc-ra.jdbc-core</groupId>
            <artifactId>jdbc-core</artifactId>
            <version>7.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>5.3.32</version>
            <scope>test</scope>
        </dependency>

        <!-- postgres -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.3</version>
            <scope>test</scope>
        </dependency>

        <!-- oracle -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>oracle-xe</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
            <version>23.2.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- db2 -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>db2</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.db2</groupId>
            <artifactId>jcc</artifactId>
            <version>11.5.9.0</version>
            <scope>test</scope>
        </dependency>

        <!-- SQL Server -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mssqlserver</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>9.4.0.jre11</version>
            <scope>test</scope>
        </dependency>

        <!-- Maria DB -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mariadb</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>3.3.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Mysql -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>8.3.0</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <profiles>
        <profile>
            <id>integrationTests</id>
            <activation>
                <property>
                    <name>!skipTests</name>
                </property>
            </activation>
            <properties>
                <database.alias>database</database.alias>
                <database.port>1234</database.port>
                <database.name>testdb</database.name>
                <database.username>tester</database.username>
                <database.password>pass</database.password>
                <database.driver>com.mysql:mysql-connector-j:jar:8.0.31</database.driver>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.44.0</version>
                        <configuration>
                            <removeVolumes>true</removeVolumes>
                            <images>
                                <image>
                                    <alias>${database.alias}</alias>
                                    <name>mysql:5.7.34</name>
                                    <run>
                                        <wait>
                                            <time>30000</time>
                                            <log>port: 3306  MySQL Community Server</log>
                                        </wait>
                                        <env>
                                            <MYSQL_ROOT_PASSWORD>${database.password}</MYSQL_ROOT_PASSWORD>
                                            <MYSQL_DATABASE>${database.name}</MYSQL_DATABASE>
                                            <MYSQL_USER>${database.username}</MYSQL_USER>
                                            <MYSQL_PASSWORD>${database.password}</MYSQL_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>${database.port}:3306</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>
                                                    ${project.build.directory}/test-classes/db/create-schema.sql:/docker-entrypoint-initdb.d/1.sql
                                                </volume>
                                            </bind>
                                        </volumes>
                                        <cmd>--default_authentication_plugin=mysql_native_password
                                            --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
                                        </cmd>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>


                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includeProjectDependencies>true</includeProjectDependencies>
                            <executable>docker</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>-e</argument>
                                <argument>ADD_CLASSPATH=/wakamiti/dependencies/*:/wakamiti/classes</argument>
                                <argument>-v</argument>
                                <argument>${project.build.directory}:/wakamiti</argument>
                                <argument>--rm</argument>
                                <argument>-w</argument>
                                <argument>/wakamiti/test-classes</argument>
                                <argument>--add-host=host.docker.internal:host-gateway</argument>
                                <argument>wakamiti/wakamiti:test</argument>
                                <argument>-m</argument>
                                <argument>${database.driver}</argument>
                                <argument>-K</argument>
                                <argument>tagFilter=launcher</argument>
                                <argument>-K</argument>
                                <argument>data.dir=.</argument>
                                <argument>-K</argument>
                                <argument>database.connection.url=jdbc:mysql://host.docker.internal:${database.port}/${database.name}</argument>
                                <argument>-K</argument>
                                <argument>database.connection.username=${database.username}</argument>
                                <argument>-K</argument>
                                <argument>database.connection.password=${database.password}</argument>
                            </arguments>
<!--                            <quietLogs>false</quietLogs>-->
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>es.iti.wakamiti</groupId>
                        <artifactId>wakamiti-maven-plugin</artifactId>
                        <version>${wakamiti-engine.version}</version>
                        <executions>
                            <execution>
                                <id>verify</id>
                                <goals><goal>verify</goal></goals>
                            </execution>
                            <execution>
                                <id>control</id>
                                <goals><goal>control</goal></goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includeProjectDependencies>true</includeProjectDependencies>
                            <configurationFiles>${project.build.directory}/test-classes/wakamiti.yaml
                            </configurationFiles>
                            <logLevel>off</logLevel>
                            <properties>
                                <workingDir>${project.build.directory}/test-classes</workingDir>
                                <resourcePath>${project.build.directory}/test-classes</resourcePath>
                                <tagFilter>launcher</tagFilter>
                                <database.connection.url>jdbc:mysql://localhost:${database.port}/${database.name}
                                </database.connection.url>
                                <database.connection.username>${database.username}</database.connection.username>
                                <database.connection.password>${database.password}</database.connection.password>
                                <data.dir>.</data.dir>
                                <outputFilePath>${project.build.directory}/wakamiti.json</outputFilePath>
                                <logs.showStepSource>false</logs.showStepSource>
                            </properties>
                        </configuration>
                        <dependencies>
                            <!-- Wakamiti plugins -->
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>8.0.31</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>