<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This Source Code Form is subject to the terms of the Mozilla Public
  ~ License, v. 2.0. If a copy of the MPL was not distributed with this
  ~ file, You can obtain one at https://mozilla.org/MPL/2.0/.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>es.iti.wakamiti</groupId>
        <artifactId>wakamiti-plugin-starter</artifactId>
        <version>${revision}</version>
        <relativePath>../../wakamiti-plugin-starter</relativePath>
    </parent>


    <artifactId>db-wakamiti-plugin</artifactId>
    <version>3.0.0-SNAPSHOT</version>

    <name>[Wakamiti Plugin] Database Steps</name>
    <description>Database steps for Wakamiti</description>
    <inceptionYear>2019</inceptionYear>


    <properties>
        <h2.version>2.2.224</h2.version>
        <test.containers>1.19.5</test.containers>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.rubiconproject.oss</groupId>
            <artifactId>jchronic</artifactId>
            <version>0.2.8</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.2.3</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.jsqlparser</groupId>
            <artifactId>jsqlparser</artifactId>
            <version>4.8</version>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>es.iti.wakamiti</groupId>
            <artifactId>wakamiti-junit</artifactId>
            <version>2.4.0-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>4.11.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.jdbc.jdbc-ra.jdbc-core</groupId>
            <artifactId>jdbc-core</artifactId>
            <version>7.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>5.3.32</version>
            <scope>test</scope>
        </dependency>

        <!-- postgres -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.5.1</version>
            <scope>test</scope>
        </dependency>

        <!-- oracle -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>oracle-xe</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
            <version>23.2.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- db2 -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>db2</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.db2</groupId>
            <artifactId>jcc</artifactId>
            <version>11.5.9.0</version>
            <scope>test</scope>
        </dependency>

        <!-- SQL Server -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mssqlserver</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>9.4.0.jre11</version>
            <scope>test</scope>
        </dependency>

        <!-- Maria DB -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mariadb</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>3.3.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Mysql -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <version>${test.containers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.31</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

<!--    <profiles>-->
<!--        <profile>-->
<!--            <id>launcher</id>-->
<!--            <properties>-->
<!--                <maven.test.skip>true</maven.test.skip>-->
<!--                -->
<!--            </properties>-->
<!--        </profile>-->
<!--    </profiles>-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/test/resources/distribution.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                            <finalName>assembly</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.44.0</version>
                <configuration>
                    <executeStopOnVMShutdown>true</executeStopOnVMShutdown>
<!--                    <showLogs>true</showLogs>-->
<!--                    <verbose>true</verbose>-->
                    <removeVolumes>true</removeVolumes>
                    <images>
                        <image>
                            <alias>database</alias>
                            <name>mysql:5.7.34</name>
                            <run>
                                <wait>
                                    <time>30000</time>
                                    <log>port: 3306  MySQL Community Server</log>
                                </wait>
                                <env>
                                    <MYSQL_ROOT_PASSWORD>pass</MYSQL_ROOT_PASSWORD>
                                    <MYSQL_DATABASE>testdb</MYSQL_DATABASE>
                                    <MYSQL_USER>tester</MYSQL_USER>
                                    <MYSQL_PASSWORD>pass</MYSQL_PASSWORD>
                                </env>
                                <ports>
                                    <port>1234:3306</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${project.build.directory}/test-classes/db/create-schema.sql:/docker-entrypoint-initdb.d/1.sql</volume>
                                    </bind>
                                </volumes>
                                <cmd>--default_authentication_plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci</cmd>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>remove</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>docker</executable>
                    <arguments>
                        <argument>run</argument>
                        <argument>-e</argument>
                        <argument>ADD_CLASSPATH=/wakamiti/assembly/*:/wakamiti/classes</argument>
                        <argument>-v</argument>
                        <argument>${project.basedir}/target:/wakamiti</argument>
                        <argument>--rm</argument>
                        <argument>-w</argument>
                        <argument>/wakamiti/test-classes</argument>
                        <argument>wakamiti/wakamiti:test</argument>
                        <argument>-K</argument>
                        <argument>tagFilter=launcher</argument>
                    </arguments>
                    <quietLogs>false</quietLogs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>