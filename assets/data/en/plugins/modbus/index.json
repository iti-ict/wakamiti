{"hash":"1fc9582b9254edacc102e172f82d7e80e2d43044","data":{"doc":{"title":"Modbus Steps","path":"/en/plugins/modbus/","date":"9. July 2025","content":"<p>This plugin provides a set of steps to interact with devices and systems that use the Modbus protocol, a widely used\nindustrial communication protocol for automation and process control.</p>\n<p>Modbus is a serial communication protocol originally developed by Modicon (now Schneider Electric) in 1979 for use\nwith programmable logic controllers (PLCs). Today, it is one of the most common protocols used in industry to\nconnect electronic industrial devices due to its simplicity and robustness.</p>\n<p>This plugin implements the Modbus TCP variant, which allows communication over TCP/IP networks, facilitating\nintegration with modern systems and communication over standard Ethernet networks. With this plugin, you can:</p>\n<ul>\n<li>Establish connections with Modbus TCP devices</li>\n<li>Read register values from Modbus devices</li>\n<li>Write values to specific registers</li>\n<li>Verify read values to validate system behavior</li>\n</ul>\n<hr>\n<h2 id=\"table-of-contents\"><a href=\"#table-of-contents\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Table of contents</h2>\n<hr>\n<h2 id=\"installation\"><a href=\"#installation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installation</h2>\n<p>Include the module in the corresponding section.</p>\n<div id=\"coord\" class=\"remark-code-tabs\"><label for=\"coord#0\" class=\"remark-code-tab\">\n                        <input type=\"radio\" id=coord#0 name=\"coord\" checked/> yaml\n                    </label><div class=\"remark-code-content\"><div class=\"remark-code-clipboard\"><button onclick=\"copyToClipboard(this)\">\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">es.iti.wakamiti:modbus-wakamiti-plugin:1.0.0</pre><pre class=\"hidden\">es.iti.wakamiti:modbus-wakamiti-plugin:1.0.0</pre></div></div><label for=\"coord#2\" class=\"remark-code-tab\">\n                        <input type=\"radio\" id=coord#2 name=\"coord\" /> maven\n                    </label><div class=\"remark-code-content\"><div class=\"remark-code-clipboard\"><button onclick=\"copyToClipboard(this)\">\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">&lt;dependency>\n  &lt;groupId>es.iti.wakamiti&lt;/groupId>\n  &lt;artifactId>modbus-wakamiti-plugin&lt;/artifactId>\n  &lt;version>1.0.0&lt;/version>\n&lt;/dependency></pre><pre class=\"hidden\">&lt;dependency&gt;\n  &lt;groupId&gt;es.iti.wakamiti&lt;/groupId&gt;\n  &lt;artifactId&gt;modbus-wakamiti-plugin&lt;/artifactId&gt;\n  &lt;version&gt;1.0.0&lt;/version&gt;\n&lt;/dependency&gt;</pre></div></div></div>\n<hr class=\"remark-code-tabs-x\" rel=\"coord#maven\" />\n<h2 id=\"configuration\"><a href=\"#configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configuration</h2>\n<h3 id=\"modbushost\"><a href=\"#modbushost\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">modbus.host</code></h3>\n<ul>\n<li>Type: <code class=\"language-text\">string</code></li>\n<li>Default: <code class=\"language-text\">localhost</code></li>\n</ul>\n<p>Sets the IP address or hostname of the Modbus master device to which the plugin will connect. This parameter is\nessential for establishing communication with the Modbus TCP server.</p>\n<p>Example:</p>\n<div class=\"remark-code-clipboard\"><pre class=\"language-yaml\"><span class=\"token key atrule\">modbus</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> 172.17.0.1</pre></div>\n<h3 id=\"modbusport\"><a href=\"#modbusport\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">modbus.port</code></h3>\n<ul>\n<li>Type: <code class=\"language-text\">integer</code></li>\n<li>Default: <code class=\"language-text\">5020</code></li>\n</ul>\n<p>Sets the TCP port used for communication with the Modbus master device. The standard port for Modbus TCP is 502,\nalthough alternative ports are often used in many environments for security reasons or network configuration.</p>\n<p>Example:</p>\n<div class=\"remark-code-clipboard\"><pre class=\"language-yaml\"><span class=\"token key atrule\">modbus</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5021</span></pre></div>\n<h3 id=\"modbusslaveid\"><a href=\"#modbusslaveid\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">modbus.slaveId</code></h3>\n<ul>\n<li>Type: <code class=\"language-text\">integer</code></li>\n<li>Default: <code class=\"language-text\">1</code></li>\n</ul>\n<p>Sets the identifier of the Modbus slave device you want to communicate with. In a Modbus network, each slave device\nhas a unique identifier that allows the master to direct commands specifically to that device.</p>\n<p>Valid values for the slave ID are in the range of 1 to 247, with the value 1 commonly used for the first device in\nmany configurations. In networks with multiple Modbus devices, it is essential to configure this parameter correctly\nto communicate with the desired device.</p>\n<p>Example:</p>\n<div class=\"remark-code-clipboard\"><pre class=\"language-yaml\"><span class=\"token key atrule\">modbus</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">slaveId</span><span class=\"token punctuation\">:</span> <span class=\"token number\">11</span></pre></div>\n<h2 id=\"steps\"><a href=\"#steps\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Steps</h2>\n<h3 id=\"define-base-url\"><a href=\"#define-base-url\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Define base URL</h3>\n<div class=\"remark-code-clipboard\"><button onclick=\"copyToClipboard(this)\">\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">the base URL tcp://{host}:{port}</pre><pre class=\"hidden\">the base URL tcp://{host}:{port}</pre></div>\n<p>Sets the connection address and port for the Modbus master device.\nThis step is equivalent to configuring the properties <a href=\"#modbushost\"><code class=\"language-text\">modbus.host</code></a> and <a href=\"#modbusport\"><code class=\"language-text\">modbus.port</code></a>\nsimultaneously.</p>\n<h4 id=\"parameters\"><a href=\"#parameters\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parameters:</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Wakamiti type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">host</code></td>\n<td><code class=\"language-text\">word</code> <em>required</em></td>\n<td>base host</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">port</code></td>\n<td><code class=\"language-text\">integer</code> <em>required</em></td>\n<td>base port</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"examples\"><a href=\"#examples\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Examples:</h4>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\">Given the base URL tcp://example.org:5021</pre></div>\n<h3 id=\"define-slave-id\"><a href=\"#define-slave-id\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Define slave ID</h3>\n<div class=\"remark-code-clipboard\"><button onclick=\"copyToClipboard(this)\">\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">the slaveId {id}</pre><pre class=\"hidden\">the slaveId {id}</pre></div>\n<p>Sets the identifier of the Modbus slave device you want to communicate with.\nThis step is equivalent to configuring the property <a href=\"#modbusslaveid\"><code class=\"language-text\">modbus.slaveId</code></a>.</p>\n<h4 id=\"parameters-1\"><a href=\"#parameters-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parameters:</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Wakamiti type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">id</code></td>\n<td><code class=\"language-text\">integer</code> <em>required</em></td>\n<td>slave id</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"examples-1\"><a href=\"#examples-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Examples:</h4>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\">Given the slaveId 11</pre></div>\n<h3 id=\"read-registers\"><a href=\"#read-registers\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Read registers</h3>\n<div class=\"remark-code-clipboard\"><button onclick=\"copyToClipboard(this)\">\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">{quantity} (is|are) read from the address {address}</pre><pre class=\"hidden\">{quantity} (is|are) read from the address {address}</pre></div>\n<p>Reads a specific number of holding registers from a given address in the Modbus slave device. Holding registers are\none of the most common data types in Modbus and are used to store values that can be both read and written.</p>\n<p>This step executes the Modbus function 03 (Read Holding Registers) and internally stores the read values for later\nverification. Each register read is a 16-bit (2 bytes) value that can represent various data types depending on the\ndevice implementation.</p>\n<p>Important considerations:</p>\n<ul>\n<li>The starting address must be valid for the specific device</li>\n<li>The requested quantity of registers must not exceed the device's capacity</li>\n<li>Registers are numbered from 0, although some device documentation may reference them from 1</li>\n<li>This step must be executed after correctly setting the slave ID</li>\n</ul>\n<h4 id=\"parameters-2\"><a href=\"#parameters-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parameters:</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Wakamiti type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">quantity</code></td>\n<td><code class=\"language-text\">integer</code> <em>required</em></td>\n<td>Number of registers to read</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">address</code></td>\n<td><code class=\"language-text\">integer</code> <em>required</em></td>\n<td>Starting address of the registers</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"examples-2\"><a href=\"#examples-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Examples:</h4>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\">When 5 are read from the address 100</pre></div>\n<h3 id=\"write-value\"><a href=\"#write-value\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Write value</h3>\n<div class=\"remark-code-clipboard\"><button onclick=\"copyToClipboard(this)\">\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">the value {value} is written on the address {address}</pre><pre class=\"hidden\">the value {value} is written on the address {address}</pre></div>\n<p>Writes an integer value to a specific holding register in the Modbus slave device. This step allows you to modify\nthe state or configuration of the remote Modbus device.</p>\n<p>This step executes the Modbus function 06 (Write Single Register), which allows writing a single 16-bit value to a\nspecific register address. It is one of the most common operations for controlling or configuring Modbus devices.</p>\n<p>Important considerations:</p>\n<ul>\n<li>The value to write must be within the allowed range for a 16-bit register (0-65535)</li>\n<li>The register address must be valid and writable on the device</li>\n<li>Some devices may have read-only registers or specific restrictions</li>\n<li>This step must be executed after correctly setting the slave ID</li>\n<li>It is recommended to verify the written value with a subsequent read operation</li>\n</ul>\n<h4 id=\"parameters-3\"><a href=\"#parameters-3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parameters:</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Wakamiti type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">value</code></td>\n<td><code class=\"language-text\">integer</code> <em>required</em></td>\n<td>Value to write</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">address</code></td>\n<td><code class=\"language-text\">integer</code> <em>required</em></td>\n<td>Position where to write the value</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"examples-3\"><a href=\"#examples-3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Examples:</h4>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\">When the value 42 is written on the address 100</pre></div>\n<h3 id=\"check-read-value\"><a href=\"#check-read-value\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Check read value</h3>\n<div class=\"remark-code-clipboard\"><button onclick=\"copyToClipboard(this)\">\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">registers read contains value {value}</pre><pre class=\"hidden\">registers read contains value {value}</pre></div>\n<p>Verifies that among the previously read registers (using the \"Read registers\" step) there is at least one that\ncontains exactly the specified value. This step is essential for validating the expected behavior of the Modbus\ndevice and confirming that the register values are correct.</p>\n<p>This step performs a search in the array of values obtained in the last read operation and generates an error if the\nspecified value is not found in any of the read registers.</p>\n<p>Important considerations:</p>\n<ul>\n<li>This step must be executed after a register read step</li>\n<li>If no previous read has been performed, an error will be generated</li>\n<li>The comparison is exact (the entire integer value must match)</li>\n<li>If you need to verify values at specific positions, it is recommended to perform individual reads for each position</li>\n</ul>\n<h4 id=\"parameters-4\"><a href=\"#parameters-4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parameters:</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Wakamiti type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">value</code></td>\n<td><code class=\"language-text\">integer</code> <em>required</em></td>\n<td>Value to find in the registers</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"examples-4\"><a href=\"#examples-4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Examples:</h4>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\">Then registers read contains value 42</pre></div>\n"}},"context":{"id":"6483e3e74707de2c8f23b5056c0ae8dc","path":"/en/plugins/modbus/","locale":"en"}}