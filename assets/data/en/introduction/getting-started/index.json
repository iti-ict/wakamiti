{"hash":"c1597b2e72e6209300d467a44f565c0ee410c581","data":{"doc":{"title":"Getting started","path":"/en/introduction/getting-started/","date":"20. September 2022","content":"<p>In this quick tutorial you will learn how to:</p>\n<ul>\n<li>Write the basic configuration.</li>\n<li>Write a scenario.</li>\n<li>Run wakamiti.</li>\n<li>Learn the basic workflow.</li>\n</ul>\n<p>Please be aware that this tutorial assumes that you have a:</p>\n<ul>\n<li>Some experience using a terminal.</li>\n<li>Some experience using a text editor.</li>\n<li>Basic understanding of <code class=\"language-text\">gherkin</code> syntax.</li>\n</ul>\n<p>Before we begin, you will need the following:</p>\n<ul>\n<li>Install and run <a href=\"https://www.docker.com/get-started/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Docker</a>.</li>\n<li>The source code of <a href=\"javascript:download()\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this tutorial</a>.</li>\n</ul>\n<p>Optionally:</p>\n<ul>\n<li>Install an IDE, like <a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">IntelliJ IDEA</a> or <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VS Code</a>.\nIt's not necessary to have it, but it will make scenario development much easier.</li>\n</ul>\n<h3 id=\"1-wakamiti-configuration\"><a href=\"#1-wakamiti-configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Wakamiti configuration</h3>\n<p>Wakamiti configuration is done by means of a <code class=\"language-text\">yaml</code> file that will be placed in the same directory where the tests are\nlocated, for example:</p>\n<pre class=\"language-text\">.\n├── features\n│   └── example.feature\n└── wakamiti.yaml</pre>\n<p>This is the basic configuration to be able to run the tests:</p>\n<pre class=\"language-yml\"><span class=\"token key atrule\">wakamiti</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">resourceTypes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> gherkin\n  <span class=\"token key atrule\">launcher</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">modules</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> mysql<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">-</span>connector<span class=\"token punctuation\">-</span>java<span class=\"token punctuation\">:</span>8.0.28\n      <span class=\"token punctuation\">-</span> es.iti.wakamiti<span class=\"token punctuation\">:</span>rest<span class=\"token punctuation\">-</span>wakamiti<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">:</span>2.2.1\n      <span class=\"token punctuation\">-</span> es.iti.wakamiti<span class=\"token punctuation\">:</span>db<span class=\"token punctuation\">-</span>wakamiti<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">:</span>2.2.2\n      <span class=\"token punctuation\">-</span> es.iti.wakamiti<span class=\"token punctuation\">:</span>html<span class=\"token punctuation\">-</span>report<span class=\"token punctuation\">-</span>wakamiti<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">:</span>2.2.1\n  <span class=\"token key atrule\">htmlReport</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Test\n  <span class=\"token key atrule\">rest</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">baseURL</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//localhost\n  <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">connection</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span>\n      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> user\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> p4ssw0rd</pre>\n<blockquote>\n<p><strong>NOTE</strong> <br />\nNote that each plugin has its own configuration, which you can check in <a href=\"/wakamiti//en/plugins\">their respective sections</a>.\nYou can also check other options in <a href=\"/wakamiti//en/wakamiti/architecture#global-configuration\">global configuration</a>.</p>\n</blockquote>\n<h3 id=\"2-scenario-definition\"><a href=\"#2-scenario-definition\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Scenario definition</h3>\n<p>When we do <em>Behaviour-Driven Development</em> we use concrete examples to specify what we want the software to do.\nScenarios are written before production code. They start their life as an executable specification. As the\nproduction code emerges, scenarios take on a role as living documentation and automated tests.</p>\n<p>A scenario belongs to a specific software feature. Each feature can contain many scenarios, and are defined in <code class=\"language-text\">.feature</code>\nfiles that must be in our working directory (or subdirectory).</p>\n<p>A concrete example would be to get a pet owner.</p>\n<p>Create an empty file named <code class=\"language-text\">example.feature</code> with the following content:</p>\n<pre class=\"language-gherkin\"><span class=\"token feature\"><span class=\"token keyword\">Feature:</span><span class=\"token important\"> Get the pets owners</span>\n</span>\n  <span class=\"token scenario\"><span class=\"token keyword\">Scenario:</span><span class=\"token important\"> An existing owner is consulted</span></span>\n    <span class=\"token atrule\">Given</span> el servicio REST <span class=\"token string\">'/owners/{id}'</span>\n    <span class=\"token atrule\">And</span> the path parameter <span class=\"token string\">'id'</span> with value <span class=\"token string\">'20'</span>\n    <span class=\"token atrule\">And</span> the following user is inserted into the database table owners:<span class=\"token table-head\">\n      <span class=\"token punctuation\">|</span><span class=\"token th variable\"> ID  </span><span class=\"token punctuation\">|</span><span class=\"token th variable\"> FIRST_NAME </span><span class=\"token punctuation\">|</span><span class=\"token th variable\"> LAST_NAME      </span><span class=\"token punctuation\">|</span></span><span class=\"token table-body\">\n      <span class=\"token punctuation\">|</span><span class=\"token td string\"> 20  </span><span class=\"token punctuation\">|</span><span class=\"token td string\"> Pepe       </span><span class=\"token punctuation\">|</span><span class=\"token td string\"> Perez Martínez </span><span class=\"token punctuation\">|</span></span>\n    <span class=\"token atrule\">When</span> the user is requested\n    <span class=\"token atrule\">Then</span> the response HTTP code is equals to 200\n    <span class=\"token atrule\">And</span> the response is:\n      <span class=\"token pystring string\">\"\"\"json\n      {\n        \"id\": 20,\n        \"firstName\": \"Pepe\",\n        \"lastName\": \"Perez Martínez\"\n      }\n      \"\"\"</span></pre>\n<p>The first line of this file starts with the keyword <code class=\"language-text\">Feature:</code> followed by a name. It is a good idea to use a name\nsimilar to the file name.</p>\n<p>The third line, <code class=\"language-text\">Scenario: An existing owner is queried</code>, is a scenario, which is a concrete example that illustrates\nhow the software should behave.</p>\n<p>The rest of the lines starting with <code class=\"language-text\">Given</code>, <code class=\"language-text\">When</code>, <code class=\"language-text\">Then</code>, <code class=\"language-text\">And</code> are the steps of our scenario, and are what Wakamiti\nwill execute.</p>\n<p><a href=\"https://cucumber.io/docs/gherkin/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">See more</a> in detail the <code class=\"language-text\">gherkin</code> syntax.</p>\n<h3 id=\"3-run-wakamiti\"><a href=\"#3-run-wakamiti\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Run Wakamiti</h3>\n<p>The tests are run from the directory containing the Wakamiti features with the following command:</p>\n<ul>\n<li>Windows:</li>\n</ul>\n<pre class=\"language-Shell\">docker run --rm -v \"%cd%:/wakamiti\" wakamiti/wakamiti</pre>\n<ul>\n<li>Linux:</li>\n</ul>\n<pre class=\"language-Shell\">docker run --rm -v \"$(pwd):/wakamiti\" wakamiti/wakamiti</pre>\n<p>With this command, you will download the latest version of Wakamiti. To work with a specific version,\nyou should specify it in the Docker command as follows: <code class=\"language-text\">wakamiti/wakamiti:version</code>, You can view the available\nversions in the <a href=\"https://hub.docker.com/r/wakamiti/wakamiti/tags\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wakamiti dockerhub</a> repository.</p>\n<h3 id=\"4reports\"><a href=\"#4reports\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4.Reports</h3>\n<p>Once the tests are executed, the results are generated in two formats: <code class=\"language-text\">wakamiti.json</code> and <code class=\"language-text\">wakamiti.html</code>.</p>\n<p>The current states available in Wakamiti are:</p>\n<ul>\n<li><span style=\"color:#5fc95f\"><strong>PASSED</strong></span>: test case is correct, the same result as expected is received from the\nsystem.</li>\n<li><span style=\"color:#4fc3f7\"><strong>NOT IMPLEMENTED</strong></span>: test case exists, but its steps are not defined.</li>\n<li><span style=\"color:#9e9e9e\"><strong>SKIPPED</strong></span>: test case has not been executed.</li>\n<li><span style=\"color:#ffc107\"><strong>UNDEFINED</strong></span>: there is no such step in Wakamiti.</li>\n<li><span style=\"color:#ff7b7e\"><strong>FAILED</strong></span>: there is a check error, it does not match what is expected from what the\nsystem returns.</li>\n<li><span style=\"color:#ff0000\"><strong>ERROR</strong></span>: there is an unexpected error in the system (connection error, database error,\ntime out error...).</li>\n</ul>\n"}},"context":{"id":"06167da12e9078b46de36a360242b354","path":"/en/introduction/getting-started/","locale":"en"}}