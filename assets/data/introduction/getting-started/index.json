{"hash":"1b58ce68c2b9dacc0d7187975d25c41e8552c527","data":{"doc":{"title":"Primeros pasos","path":"/introduction/getting-started/","date":"20. September 2022","content":"<p>En este tutorial rápido aprenderás a:</p>\n<ul>\n<li>Definir la configuración básica.</li>\n<li>Definir un escenario.</li>\n<li>Lanzar wakamiti.</li>\n<li>Conocer el flujo de trabajo básico.</li>\n</ul>\n<p>Ten en cuenta que este tutorial asume que tienes:</p>\n<ul>\n<li>Algo de experiencia usando un terminal.</li>\n<li>Algo de experiencia usando un editor de texto.</li>\n<li>Comprensión básica de la sintaxis de <code class=\"language-text\">gherkin</code>.</li>\n</ul>\n<p>Antes de empezar, necesitarás lo siguiente:</p>\n<ul>\n<li>Instalar y arrancar <a href=\"https://www.docker.com/get-started/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Docker</a>.</li>\n<li>Instalar un IDE, como <a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">IntelliJ IDEA</a> o <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VS Code</a>.</li>\n<li>El código fuente de <a href=\"https://minhaskamal.github.io/DownGit/#/home?url=https://github.com/iti-ict/wakamiti/tree/main/examples/tutorial\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">este tutorial</a>.</li>\n</ul>\n<h3 id=\"1-configurar-wakamiti\"><a href=\"#1-configurar-wakamiti\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Configurar Wakamiti</h3>\n<p>La configuración de Wakamiti se realiza mediante un fichero <code class=\"language-text\">yaml</code> que se situará en el directorio donde se ubiquen los\ntests, por ejemplo:</p>\n<pre class=\"language-text\">.\n├── features\n│   └── example.feature\n└── wakamiti.yaml</pre>\n<p>Esta es la configuración básica para poder ejecutar los tests:</p>\n<pre class=\"language-yml\"><span class=\"token key atrule\">wakamiti</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">resourceTypes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> gherkin\n  <span class=\"token key atrule\">launcher</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">modules</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> mysql<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">-</span>connector<span class=\"token punctuation\">-</span>java<span class=\"token punctuation\">:</span>8.0.28\n      <span class=\"token punctuation\">-</span> es.iti.wakamiti<span class=\"token punctuation\">:</span>rest<span class=\"token punctuation\">-</span>wakamiti<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">:</span>2.2.1\n      <span class=\"token punctuation\">-</span> es.iti.wakamiti<span class=\"token punctuation\">:</span>db<span class=\"token punctuation\">-</span>wakamiti<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">:</span>2.2.2\n      <span class=\"token punctuation\">-</span> es.iti.wakamiti<span class=\"token punctuation\">:</span>html<span class=\"token punctuation\">-</span>report<span class=\"token punctuation\">-</span>wakamiti<span class=\"token punctuation\">-</span>plugin<span class=\"token punctuation\">:</span>2.2.1\n  <span class=\"token key atrule\">htmlReport</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Test\n  <span class=\"token key atrule\">rest</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">baseURL</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//localhost\n  <span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">connection</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span>\n      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> user\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> p4ssw0rd</pre>\n<blockquote>\n<p><strong>NOTA</strong> <br />\nTen en cuenta que cada plugin tiene su propia configuración, la cual puedes consultar en <a href=\"/wakamiti//plugins\">sus respectivos apartados</a>.\nTambién puedes consultar otras opciones de <a href=\"/wakamiti//wakamiti/architecture#configuraci%C3%B3n-global\">configuración global</a>.</p>\n</blockquote>\n<h3 id=\"2-definir-escenario\"><a href=\"#2-definir-escenario\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Definir escenario</h3>\n<p>Cuando hacemos <em>Behaviour-Driven Development</em> utilizamos ejemplos concretos para especificar lo que queremos que haga el\nsoftware. Los escenarios se escriben antes que el código de producción. Comienzan su vida como una especificación\nejecutable. Cuando llega el código a producción, los escenarios adquieren un papel como documentación viva y pruebas\nautomatizadas.</p>\n<p>Un escenario pertenece a una característica concreta del software. Cada característica puede contener muchos escenarios,\ny se definen en archivos <code class=\"language-text\">.feature</code> que deberán estar en nuestro directorio de trabajo (o subdirectorio).</p>\n<p>Un ejemplo concreto sería consultar un propietario de una mascota.</p>\n<p>Crea un archivo vacío llamado <code class=\"language-text\">example.feature</code> con el siguiente contenido:</p>\n<pre class=\"language-gherkin\"><span class=\"token comment\"># language: es</span>\n<span class=\"token feature\"><span class=\"token keyword\">Característica:</span><span class=\"token important\"> Consultar propietarios</span>\n  \n</span>  <span class=\"token scenario\"><span class=\"token keyword\">Escenario:</span><span class=\"token important\"> Se consulta un dueño existente</span></span>\n    <span class=\"token atrule\">Dado</span> el servicio REST <span class=\"token string\">'/owners/{id}'</span>\n    <span class=\"token atrule\">Y</span> el parámetro de ruta <span class=\"token string\">'id'</span> con el valor <span class=\"token string\">'20'</span>\n    <span class=\"token atrule\">Y</span> que se ha insertado el siguiente usuario en la tabla de BBDD owners:<span class=\"token table-head\">\n      <span class=\"token punctuation\">|</span><span class=\"token th variable\"> ID  </span><span class=\"token punctuation\">|</span><span class=\"token th variable\"> FIRST_NAME </span><span class=\"token punctuation\">|</span><span class=\"token th variable\"> LAST_NAME      </span><span class=\"token punctuation\">|</span></span><span class=\"token table-body\">\n      <span class=\"token punctuation\">|</span><span class=\"token td string\"> 20  </span><span class=\"token punctuation\">|</span><span class=\"token td string\"> Pepe       </span><span class=\"token punctuation\">|</span><span class=\"token td string\"> Perez Martínez </span><span class=\"token punctuation\">|</span></span>\n    <span class=\"token atrule\">Cuando</span> se consulta el usuario\n    <span class=\"token atrule\">Entonces</span> el código de respuesta HTTP es 200\n    <span class=\"token atrule\">Y</span> la respuesta es parcialmente:\n      <span class=\"token pystring string\">\"\"\"json\n      {\n        \"id\": 20,\n        \"firstName\": \"Pepe\",\n        \"lastName\": \"Perez Martínez\"\n      }\n      \"\"\"</span></pre>\n<p>La segunda línea de este archivo comienza con la palabra clave <code class=\"language-text\">Característica:</code> seguida de un nombre. Es una buena idea\nusar un nombre similar al nombre del fichero.</p>\n<p>La cuarta línea, <code class=\"language-text\">Escenario: Se consulta un dueño existente</code>, es un escenario, que es un ejemplo concreto que ilustra\ncómo se debe comportar el software.</p>\n<p>El resto de líneas que comienzan con <code class=\"language-text\">Dado</code>, <code class=\"language-text\">Cuando</code>, <code class=\"language-text\">Entonces</code>, <code class=\"language-text\">Y</code> son los pasos de nuestro escenario, y es lo que\nWakamiti ejecutará.</p>\n<p><a href=\"https://cucumber.io/docs/gherkin/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ver más</a> en detalle la sintaxis de <code class=\"language-text\">gherkin</code>.</p>\n<h3 id=\"3-lanzar-wakamiti\"><a href=\"#3-lanzar-wakamiti\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Lanzar Wakamiti</h3>\n<p>Los test se ejecutan con el terminal desde el directorio que contiene las características de Wakamiti con el siguiente\ncomando:</p>\n<ul>\n<li>Windows:</li>\n</ul>\n<pre class=\"language-Shell\">docker run --rm -v \"%cd%:/wakamiti\" wakamiti/wakamiti</pre>\n<ul>\n<li>Linux:</li>\n</ul>\n<pre class=\"language-Shell\">docker run --rm -v \"$(pwd):/wakamiti\" wakamiti/wakamiti</pre>\n<p>Con este comando, se lanzarán todos los tests que haya en el directorio,\nutilizando la última versión de wakamiti. Para trabajar con una versión\nespecífica, se debe de indicar en el comando docker: <code class=\"language-text\">wakamiti/wakamiti:version</code>,\nse pueden ver las versiones disponibles en el repositorio de\n<a href=\"https://hub.docker.com/r/wakamiti/wakamiti/tags\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dockerhub de Wakamiti</a>.</p>\n<h3 id=\"4informes\"><a href=\"#4informes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4.Informes</h3>\n<p>Una vez ejecutados los tests, se generarán los resultados en dos formatos: <code class=\"language-text\">wakamiti.json</code> y <code class=\"language-text\">wakamiti.html</code>.</p>\n<p>Los estados que existen actualmente en Wakamiti son:</p>\n<ul>\n<li><span style=\"color:#5fc95f\"><strong>PASSED</strong></span>: el caso de test está correcto, se recibe del sistema el mismo resultado\nque se espera.</li>\n<li><span style=\"color:#4fc3f7\"><strong>NOT IMPLEMENTED</strong></span>: existe el caso de test, pero no están definidos sus pasos.</li>\n<li><span style=\"color:#9e9e9e\"><strong>SKIPPED</strong></span>: no se ha ejecutado el caso de test.</li>\n<li><span style=\"color:#ffc107\"><strong>UNDEFINED</strong></span>: no existe el paso en Wakamiti.</li>\n<li><span style=\"color:#ff7b7e\"><strong>FAILED</strong></span>: hay un error de comprobación, no coincide lo que se espera de lo que\ndevuelve el sistema.</li>\n<li><span style=\"color:#ff0000\"><strong>ERROR</strong></span>: hay un error no esperado en el sistema (error de conexión, error en base de\ndatos, error time out...).</li>\n</ul>\n"}},"context":{"id":"24b1afc8d3742575ba2b990e23efe4ed","path":"/introduction/getting-started/","locale":"es"}}