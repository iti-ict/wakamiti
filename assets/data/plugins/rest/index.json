{"hash":"ed8ab4ac0effb0bac2bde60a1462a923227b185d","data":{"doc":{"title":"Rest","path":"/plugins/rest/","date":"20. September 2022","content":"\r\nEste plugin proporciona un conjunto de pasos para interactúan con una API RESTful.\r\n\r\n**Configuración**:\r\n- [`rest.baseURL`](#restbaseurl)\r\n- [`rest.contentType`](#restcontenttype)\r\n- [`rest.httpCodeThreshold`](#resthttpcodethreshold)\r\n- [`rest.oauth2.url`](#rest-oauth2url)\r\n- [`rest.oauth2.clientId`](#restoauth2clientid)\r\n- [`rest.oauth2.clientSecret`](#restoauth2clientsecret)\r\n\r\n**Pasos**:\r\n- [Definir tipo de contenido](#definir-tipo-de-contenido)\r\n- [Definir URL base](#definir-url-base)\r\n- [Definir servicio](#definir-servicio)\r\n- [Definir identificador](#definir-identificador)\r\n- [Definir parámetros de solicitud (request)](#definir-par%C3%A1metros-de-solicitud-request)\r\n- [Definir parámetros de búsqueda (query)](#definir-par%C3%A1metros-de-solicitud-query)\r\n- [Definir parámetros de ruta (path)](#definir-par%C3%A1metros-de-solicitud-path)\r\n- [Definir cabeceras](#definir-cabeceras)\r\n- [Definir timeout](#definir-timeout)\r\n- [Definir umbral de códigos HTTP](#definir-umbral-de-cdigos-http)\r\n- [Definir autenticación básica](#definir-autenticaci%C3%B3n-b%C3%A1sica)\r\n- [Definir token de autenticación](#definir-token-de-autenticaci%C3%B3n)\r\n- [Definir token de autenticación (fichero)](#definir-token-de-autenticaci%C3%B3n-fichero)\r\n- [Definir autenticación oauth2](#definir-autenticaci%C3%B3n-oauth2)\r\n- [Definir archivo adjunto](#definir-archivo-adjunto)\r\n- [Definir archivo adjunto (fichero)](#definir-archivo-adjunto-fichero)\r\n- [Realizar llamada GET](#realizar-llamada-get)\r\n- [Realizar llamada DELETE](#realizar-llamada-delete)\r\n- [Realizar llamada PUT con mensaje](#realizar-llamada-put-con-mensaje)\r\n- [Realizar llamada PUT con mensaje (fichero)](#realizar-llamada-put-con-mensaje-fichero)\r\n- [Realizar llamada PATCH](#realizar-llamada-patch)\r\n- [Realizar llamada PATCH con mensaje](#realizar-llamada-patch-con-mensaje)\r\n- [Realizar llamada PATCH con mensaje (fichero)](#realizar-llamada-patch-con-mensaje-fichero)\r\n- [Realizar llamada POST](#realizar-llamada-post)\r\n- [Realizar llamada POST con mensaje](#realizar-llamada-post-con-mensaje)\r\n- [Realizar llamada POST con mensaje (fichero)](#realizar-llamada-post-con-mensaje-fichero)\r\n- [Comprobar código de respuesta](#comprobar-c%C3%B3digo-de-respuesta)\r\n- [Comprobar mensaje de respuesta](#comprobar-mensaje-de-respuesta)\r\n- [Comprobar mensaje de respuesta (fichero)](#comprobar-mensaje-de-respuesta-fichero)\r\n- [Comprobar fragmento de la respuesta](#comprobar-fragmento-de-la-respuesta)\r\n- [Comprobar tipo de contenido de la respuesta](#comprobar-tipo-de-contenido-de-la-respuesta)\r\n- [Comprobar tamaño de la respuesta](#comprobar-tama%C3%B1o-de-la-respuesta)\r\n- [Comprobar cabecera](#comprobar-cabecera)\r\n\r\n\r\n\r\n\r\n## Configuración\r\n\r\n---\r\n###  `rest.baseURL`\r\nEstablece la URL base para las llamadas REST.\r\nEsto es equivalente al paso `{word} como el tipo de contenido REST` si se prefiere una declaración más descriptiva.\r\n\r\nEjemplo:\r\n\r\n```yaml\r\nrest:\r\n  baseURL: http://example.org/api/v2\r\n```\r\n\r\n---\r\n### `rest.contentType`\r\nEstablece el tipo de contenido que se enviará en la cabecera de las llamadas REST.\r\nLos valores aceptados son:\r\n\r\n| literal    | valor de la cabecera `content-type`                                    |\r\n|------------|------------------------------------------------------------------------|\r\n| `ANY`      | `*/*`                                                                  |\r\n| `TEXT`     | `text/plain`                                                           |\r\n| `JSON`     | `application/json, application/javascript, text/javascript, text/json` |\r\n| `XML`      | `application/xml, text/xml, application/xhtml+xml`                     |\r\n| `HTML`     | `text/html`                                                            |\r\n| `URLENC`   | `application/x-www-form-urlencoded`                                    |\r\n| `BINARY`   | `application/octet-stream`                                             |\r\n\r\n\r\nEl valor por defecto es `JSON`.\r\n\r\nEjemplo:\r\n\r\n```yaml\r\nrest:\r\n  contentType: XML\r\n```\r\n\r\n---\r\n### `rest.httpCodeThreshold`\r\n\r\nEstablece un límite a los códigos de respuesta HTTP. Cada vez que una llamada REST retorne un\r\ncódigo HTTP igual o superior a este valor, el paso se marcará como fallido automáticamente, sin\r\ncomprobar ninguna otra condición.\r\n\r\nEl valor por defecto es `500`.\r\n\r\nEjemplo:\r\n\r\n```yaml\r\nrest:\r\n  httpCodeThreshold: 999\r\n```\r\n\r\n---\r\n### `rest.oauth2.url`\r\n\r\nEstablece el servicio de autenticación [OAuth 2.0][oauth2] que se usará para generar el token que se enviará\r\nen la cabecera HTTP `Authorization` de las llamadas REST.\r\n\r\nEjemplo:\r\n\r\n```yaml\r\nrest:\r\n  oauth2: \r\n    url: https://accounts.google.com/o/oauth2/auth\r\n```\r\n\r\n\r\n---\r\n### `rest.oauth2.clientId`\r\nEstablece el parámetro `clientId` para el servicio de autenticación [OAuth 2.0][oauth2] definido\r\npor el valor de la propiedad de configuración `rest.oauth2.url`.\r\n\r\nEjemplo:\r\n\r\n```yaml\r\nrest:\r\n  oauth2: \r\n    clientId: WEB_APP\r\n```\r\n\r\n---\r\n### `rest.oauth2.clientSecret`\r\nEstablece el parámetro `clientSecret` para el servicio de autenticación [OAuth 2.0][oauth2] definido\r\npor el valor de la propiedad de configuración `rest.oauth2.url`.\r\n\r\nEjemplo:\r\n\r\n```yaml\r\nrest:\r\n  oauth2: \r\n    clientSecret: ABRACADABRAus1ZMGHvq9R\r\n```\r\n\r\n\r\n\r\n## Pasos\r\n\r\n---\r\n### Definir tipo de contenido\r\n```\r\n{type} como el tipo de contenido REST\r\n```\r\nEstablece el tipo de contenido de la API en la cabecera `content-type`. Este paso es equivalente a configurar la \r\npropiedad [`rest.contentType`](#restcontenttype). \r\n\r\n#### Parámetros:\r\n| Nombre | Kukumo type | Descripción        |\r\n|--------|-------------|--------------------|\r\n| `type` | `word`      | La URL de conexión |\r\n\r\n#### Ejemplos:\r\n```gherkin\r\n  Dado XML como el tipo de contenido REST\r\n```\r\n\r\n---\r\n### Definir URL base\r\n```\r\nla URL base {url}\r\n```\r\nEstablece la ruta base de la API. Este paso es equivalente a configurar la propiedad [`rest.baseURL`](#restbaseurl). \r\n\r\n#### Parámetros:\r\n| Nombre | Kukumo type | Descripción |\r\n|--------|-------------|-------------|\r\n| `url`  | `url`       | URL base    |\r\n\r\n#### Ejemplos:\r\n```gherkin\r\n  Dada la URL base http//example.org/api\r\n```\r\n\r\n---\r\n### Definir servicio\r\n```\r\nel servicio REST {service}\r\n```\r\nEstablece la ruta del servicio a probar. Se concatenará al valor de la [url base](#definir-url-base).\r\n\r\n#### Parámetros:\r\n| Nombre    | Kukumo type | Descripción  |\r\n|-----------|-------------|--------------|\r\n| `service` | `text`      | Segmento URL |\r\n\r\n#### Ejemplos:\r\n```gherkin\r\n  Dado el servicio REST '/users`\r\n```\r\n\r\n---\r\n### Definir identificador\r\n```\r\n* identificad(o|a|os|as) por {text}\r\n```\r\nEstablece un identificador de recurso REST para ser usado por el servicio. Se concatenará al valor de la \r\n[url base](#definir-url-base) y del [servicio](#definir-servicio) en concreto.\r\n\r\n#### Parámetros:\r\n| Nombre | Kukumo type | Descripción                 |\r\n|--------|-------------|-----------------------------|\r\n| `text` | `text`      | Un identificador de recurso |\r\n\r\n#### Ejemplos:\r\n```gherkin\r\n  Dado un usuario identificado por 'john'\r\n```\r\n```gherkin\r\n  Dado un libro identificado por '978-3-16-148410-0'\r\n```\r\n\r\n---\r\n### Definir parámetros de solicitud (request)\r\n```\r\nlos siguiente parámetros de solicitud:\r\n```\r\nEstablece los parámetros de la petición REST. Estos parámetros se enviaran como datos de formulario.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                                   |\r\n|--------|-------------|-----------------------------------------------|\r\n|        | `table`     | Una tabla con las columnas `nombre` y `valor` |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dados los siguiente parámetros de solicitud:\r\n    | nombre | valor    |\r\n    | age    | 13       |\r\n    | city   | Valencia |\r\n```\r\n\r\n---\r\n### Definir parámetros de solicitud (query)\r\n```\r\nlos siguiente parámetros de búsqueda:\r\n```\r\nEstablece los parámetros de la petición REST. Estos parámetros se concatenerán a la URL de la petición tras la ruta, \r\npor ejemplo `/user?param1=abc&param2=123`.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                                   |\r\n|--------|-------------|-----------------------------------------------|\r\n|        | `table`     | Una tabla con las columnas `nombre` y `valor` |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dados los siguiente parámetros de solicitud:\r\n    | nombre | valor    |\r\n    | age    | 13       |\r\n    | city   | Valencia |\r\n```\r\n\r\n---\r\n### Definir parámetros de solicitud (path)\r\n```\r\nlos siguiente parámetros de ruta:\r\n```\r\nEstablece los parámetros de la petición REST. Estos parámetros formarán parte de la ruta de la URL, sustituyendo a los \r\nfragmentos indicados con `{}`.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                                   |\r\n|--------|-------------|-----------------------------------------------|\r\n|        | `table`     | Una tabla con las columnas `nombre` y `valor` |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dado el servicio 'user/{usuario}/items/{item}'\r\n  Y los siguientes parámetros de ruta:\r\n    | nombre  | valor    |\r\n    | usuario | 25       |\r\n    | item    | 7        |\r\n```\r\n\r\n---\r\n### Definir cabeceras\r\n```\r\nlas siguientes cabeceras:\r\n```\r\nEstablece las cabeceras de la petición REST.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                                   |\r\n|--------|-------------|-----------------------------------------------|\r\n|        | `table`     | Una tabla con las columnas `nombre` y `valor` |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dadas las siguientes cabeceras:\r\n    | nombre       | valor |\r\n    | Age          | 3600  |\r\n    | Keep-Alive   | 1200  |\r\n```\r\n\r\n---\r\n### Definir timeout\r\n```\r\nun timeout de {int} (mili)segundos\r\n```\r\nEstablece un tiempo máximo de respuesta (en segundos o milisegundos) para las siguientes peticiones HTTP.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción      |\r\n|--------|-------------|------------------|\r\n| `int`  | `int`       | El tiempo máximo |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dado un timeout de 12000 milisegundos\r\n```\r\n```gherkin\r\n  Dado un timeout de 10 segundos\r\n```\r\n\r\n---\r\n### Definir umbral de códigos HTTP\r\n```\r\n(que) toda petición se considera fallida si su código HTTP {matcher}\r\n```\r\nEstablece una validación general para el código HTTP de todas las respuestas siguientes. Es similar a la propiedad de \r\nconfiguración [`rest.httpCodeTreshold`](#resthttpcodethreshold) pero con una validación de enteros personalizada.\r\n\r\n##### Parámetros:\r\n| Nombre    | Kukumo type         | Descripción               |\r\n|-----------|---------------------|---------------------------|\r\n| `matcher` | `integer-assertion` | Una validación de enteros |\r\n\r\n##### Ejemplo:\r\n```gherkin\r\n  * toda petición se considera fallida si su código HTTP es igual o mayor que 500\r\n```\r\n\r\n---\r\n### Definir autenticación básica\r\n```\r\n(que) el servicio usa autenticación básica con las credenciales {username}:{password}\r\n```\r\nEstablece las credenciales de autenticación básica que se enviarán en la cabecera HTTP `Authorization`.\r\n\r\n##### Parámetros:\r\n| Nombre     | Kukumo type | Descripción       |\r\n|------------|-------------|-------------------|\r\n| `username` | `text`      | Nombre de usuario |\r\n| `password` | `text`      | Contraseña        |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dado que el servicio usa autenticación básica con las credenciales 'us1532':'xxxxx'\r\n```\r\n\r\n---\r\n### Definir token de autenticación\r\n```\r\n(que) el servicio usa el token de autenticación {text}\r\n```\r\nEstablece el token de autenticación que se enviará en la cabecera `Authorization` para las siguientes peticiones. \r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción            |\r\n|--------|-------------|------------------------|\r\n| `text` | `text`      | Token de autenticación |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dado que el servicio usa el token de autenticación 'hudytw9834y9cqy32t94'\r\n```\r\n\r\n---\r\n### Definir token de autenticación (fichero)\r\n```\r\n(que) el servicio usa el token de autenticación del fichero {file}\r\n```\r\nEstablece el token de autenticación que se enviará en la cabecera `Authorization` para las siguientes llamadas, obtenido \r\ndesde un fichero.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type  | Descripción                           |\r\n|--------|--------------|---------------------------------------|\r\n| `file` | `file`       | Fichero con el token de autenticación |\r\n\r\n##### Ejemplo:\r\n```gherkin\r\n  Dado que el servicio usa el token de autenticación del fichero 'token.txt'\r\n```\r\n\r\n---\r\n### Definir autenticación oauth2\r\n```\r\n(que) el servicio usa el proveedor de autenticación con los siguientes datos:\r\n```\r\nEstablece el cuerpo que se enviará al servicio de autenticación.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                                |\r\n|--------|-------------|--------------------------------------------|\r\n|        | `document`  | Cadena con los parámetros de autenticación |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dado que el servicio usa el proveedor de autenticación con los siguientes datos:\r\n    \"\"\"\r\n    grant_type=password&username=OficinaTest4&password=xxxxx\r\n    \"\"\"\r\n```\r\n\r\n---\r\n### Definir archivo adjunto\r\n```\r\n(que) se incluye el fichero adjunto con los siguientes datos:\r\n```\r\nIndica el texto que se incluirá como fichero adjunto en datos de formulario.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción          |\r\n|--------|-------------|----------------------|\r\n|        | `document`  | Contenido a adjuntar |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dado que se incluye el fichero adjunto con los siguientes datos:\r\n    \"\"\"\r\n    Contenido del fichero\r\n    \"\"\"\r\n```\r\n\r\n---\r\n### Definir archivo adjunto (fichero)\r\n```\r\n(que) se incluye el fichero adjunto {file}\r\n```\r\nIndica el fichero cuyo contenido se incluirá como fichero adjunto en datos de formulario.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                         |\r\n|--------|-------------|-------------------------------------|\r\n| `file` | `file`      | Fichero con el contenido a adjuntar |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Dado que se incluye el fichero adjunto 'data.txt'\r\n```\r\n\r\n---\r\n### Realizar llamada GET\r\n```\r\nse realiza la búsqueda *\r\n```\r\n```\r\nse consulta(n) *\r\n```\r\nEnvía una petición `GET` al servicio con los parámetros definidos previamente.\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se realiza la búsqueda de usuarios\r\n```\r\n```gherkin\r\n  Cuando se consulta el usuario\r\n```\r\n\r\n---\r\n### Realizar llamada DELETE\r\n```\r\nse elimina(n) *\r\n```\r\nEnvía una petición `DELETE` al servicio y recurso REST definido previamente.\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se elimina el usuario\r\n```\r\n\r\n---\r\n### Realizar llamada PUT con mensaje\r\n```\r\nse reemplaza(n) * con los siguientes datos:\r\n```\r\nEnvía una petición `PUT` al servicio y recurso REST definido previamente. El cuerpo de la petición será el contenido \r\nindicado a continuación.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción              |\r\n|--------|-------------|--------------------------|\r\n|        | `document`  | El cuerpo de la petición |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se reemplaza el usuario con los siguientes datos:\r\n    \"\"\"json\r\n    {\r\n        \"firstName\": \"John\",\r\n        \"lastName\": \"Doe\",\r\n        \"birthDate\": \"1980-02-20\",\r\n        \"address\": \"221B, Baker Street\"\r\n    }\r\n    \"\"\"\r\n```\r\n\r\n---\r\n### Realizar llamada PUT con mensaje (fichero)\r\n```\r\nse reemplaza(n) * con los datos del fichero {file}\r\n```\r\nEnvía una petición `PUT` al servicio y recurso REST definido previamente. El cuerpo de la petición será el contenido del \r\nfichero indicado.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                          |\r\n|--------|-------------|--------------------------------------|\r\n| `file` | `file`      | Fichero con el cuerpo de la petición |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se reemplaza el usuario con los datos del fichero 'data/user123.json'\r\n```\r\n\r\n---\r\n### Realizar llamada PATCH\r\n```\r\nse modifica(n) * \r\n```\r\nEnvía una petición `PATCH` al servicio y recurso REST definido previamente. \r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se modifica el usuario\r\n```\r\n\r\n---\r\n### Realizar llamada PATCH con mensaje\r\n```\r\nse modifica(n) * con los siguientes datos:\r\n```\r\nEnvía una petición `PATCH` al servicio y recurso REST definido previamente. El cuerpo de la petición será el contenido \r\nindicado a continuación.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción              |\r\n|--------|-------------|--------------------------|\r\n|        | `document`  | El cuerpo de la petición |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se modifica el usuario con los siguientes datos:\r\n    \"\"\"json\r\n    {\r\n        \"firstName\": \"Jim\"\r\n    }\r\n    \"\"\"\r\n```\r\n\r\n---\r\n### Realizar llamada PATCH con mensaje (fichero)\r\n```\r\nse modifica(n) * con los datos del fichero {file}\r\n```\r\nEnvía una petición `PATCH` al servicio y recurso REST definido previamente. El cuerpo de la petición será el contenido \r\ndel fichero indicado.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                          |\r\n|--------|-------------|--------------------------------------|\r\n| `file` | `file`      | Fichero con el cuerpo de la petición |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se modifica el usuario con los datos del fichero 'data/user123.json'\r\n```\r\n\r\n---\r\n### Realizar llamada POST\r\n```\r\nse crea(n) *\r\n```\r\nEnvía una petición `POST` al servicio definido previamente.\r\n\r\n##### Ejemplo:\r\n```gherkin\r\n  Cuando se crea el usuario\r\n```\r\n\r\n---\r\n### Realizar llamada POST con mensaje\r\n```\r\nse crea(n) * con los siguientes datos:\r\n```\r\n```\r\nse envía al servicio los siguientes datos:\r\n```\r\nEnvía una petición `POST` al servicio definido previamente. El cuerpo de la petición se rellenará con el contenido \r\nindicado a continuación.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción              |\r\n|--------|-------------|--------------------------|\r\n|        | `document`  | El cuerpo de la petición |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se crea un usuario con los siguientes datos:\r\n    \"\"\"json\r\n    {\r\n        \"firstName\": \"John\",\r\n        \"lastName\": \"Doe\",\r\n        \"birthDate\": \"1980-02-20\",\r\n        \"address\": \"221B, Baker Street\"\r\n    }\r\n    \"\"\"\r\n```\r\n```gherkin\r\n  Cuando se envía al servicio los siguientes datos:\r\n    \"\"\"json\r\n    {\r\n        \"date\": \"2021-10-30\"\r\n    }\r\n    \"\"\"\r\n```\r\n\r\n---\r\n### Realizar llamada POST con mensaje (fichero)\r\n```\r\nse crea(n) * con los datos del fichero {file}\r\n```\r\n```\r\nse envía al servicio los datos del fichero {file}\r\n```\r\nEnvía una petición `POST` al servicio definido previamente. El cuerpo de la petición se rellenará con el contenido del \r\nfichero indicado.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción                          |\r\n|--------|-------------|--------------------------------------|\r\n| `file` | `file`      | Fichero con el cuerpo de la petición |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Cuando se crea un usuario con los datos del fichero 'data/user123.json'\r\n```\r\n```gherkin\r\n  Cuando se envía al servicio los datos del fichero 'booking.json'\r\n```\r\n\r\n---\r\n### Comprobar código de respuesta\r\n```\r\nel código de respuesta HTTP {matcher}\r\n```\r\nComprueba que el código HTTP de la última respuesta satisface una validación de enteros.\r\n\r\n##### Parámetros:\r\n| Nombre    | Kukumo type         | Descripción               |\r\n|-----------|---------------------|---------------------------|\r\n| `matcher` | `integer-assertion` | Una validación de enteros |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Entonces el código de respuesta HTTP es 201\r\n```\r\n\r\n\r\n---\r\n### Comprobar mensaje de respuesta\r\n```\r\nla respuesta es exactamente:\r\n```\r\nValida que el cuerpo de la respuesta sea exacto al indicado, incluyendo el orden de los campos.\r\n```\r\nla respuesta es exactamente (en cualquier orden):\r\n```\r\nValida que el cuerpo de la respuesta sea exacto al indicado, pero pueden llegar los campos en diferente orden.\r\n```\r\nla respuesta es parcialmente:\r\n```\r\nValida que el cuerpo de la respuesta incluya, al menos, los campos indicados.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción           |\r\n|--------|-------------|-----------------------|\r\n|        | `document`  | El contenido esperado |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Entonces la respuesta es exactamente:\r\n    \"\"\"json\r\n    {\r\n        \"age\": 23,\r\n        \"name\": \"John\"\r\n    }\r\n    \"\"\"\r\n```\r\n\r\n---\r\n### Comprobar mensaje de respuesta (fichero)\r\n```\r\nla respuesta es exactamente el contenido del fichero {file}\r\n```\r\nValida que el cuerpo de la respuesta sea exacto al indicado en el fichero, incluyendo el orden de los campos.\r\n```\r\nla respuesta es exactamente el contenido del fichero {file} \\(en cualquier orden\\)\r\n```\r\nValida que el cuerpo de la respuesta sea exacto al indicado en el fichero, pero pueden llegar los campos en diferente orden.\r\n```\r\nla respuesta es parcialmente el contenido del fichero {file}\r\n```\r\nValida que el cuerpo de la respuesta incluya, al menos, los campos indicados en el fichero.\r\n\r\n##### Parámetros:\r\n| Nombre | Kukumo type | Descripción          |\r\n|--------|-------------|----------------------|\r\n| `file` | `file`      | Un fichero existente |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Entonces la respuesta es parcialmente el contenido del fichero 'data/response1.json'\r\n```\r\n\r\n---\r\n### Comprobar fragmento de la respuesta\r\n```\r\nel (texto|entero|decimal) del fragmento de la respuesta {fragment} {matcher}\r\n```\r\nValida el valor (*texto*, *entero* o *decimal*) de un fragmento del cuerpo de respuesta, localizado mediante una ruta dada\r\n(usando [JSONPath][jsonpath] o [XPath][xpath] dependiendo del tipo de contenido).\r\n\r\n##### Parámetros:\r\n| Nombre     | Kukumo type   | Descripción                 |\r\n|------------|---------------|-----------------------------|\r\n| `fragment` | `text`        | Una ruta JSONPath or XPath  |\r\n| `matcher`  | `*-assertion` | El comparador del fragmento |\r\n`*`: `text`, `integer` o `decimal`, dependiendo del tipo indicado en el paso.\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Entonces el decimal del fragmento de la respuesta 'users[1].account.availableMoney` es mayor que 23.57\r\n```\r\n```gherkin\r\n  Entonces el texto del fragmento de la respuesta 'users[1].name` no es 'John'\r\n```\r\n\r\n\r\n---\r\n### Comprobar tipo de contenido de la respuesta\r\n```\r\nel tipo de contenido de la respuesta es {word}\r\n```\r\nValida que el tipo de contenido de la última respuesta es el esperado.\r\nEste paso equivale a validar que el valor de la cabecera `Content-Type` de la respuesta es el tipo MIME correspondiente.\r\n\r\n##### Parámetros:\r\n| Nombre  | Kukumo type | Descripción                                        |\r\n|---------|-------------|----------------------------------------------------|\r\n| `word`  | `word`      | `ANY`,`TEXT`,`JSON`,`XML`,`HTML`,`URLENC`,`BINARY` |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Entonces el tipo de contenido de la respuesta es JSON\r\n```\r\n\r\n---\r\n### Comprobar tamaño de la respuesta\r\n```\r\nel tamaño de la respuesta {matcher}\r\n```\r\nComprueba que la longitud en bytes de la última respuesta satisface una validación.\r\n\r\n##### Parámetros:\r\n| Nombre    | Kukumo type         | Descripción               |\r\n|-----------|---------------------|---------------------------|\r\n| `matcher` | `integer-assertion` | Una validación de enteros |\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Entonces el tamaño de la respuesta es menor que 500\r\n```\r\n\r\n---\r\n### Comprobar cabecera\r\n```\r\nel (texto|entero|decimal) de la cabecera de la respuesta {name} {matcher}\r\n```\r\nComprueba que una determinada cabecera HTTP en la última respuesta satisface una validación de *texto*, *entero* o \r\n*decimal*.\r\n\r\n##### Parámetros:\r\n| Nombre    | Kukumo type   | Descripción                 |\r\n|-----------|---------------|-----------------------------|\r\n| `name`    | `text`        | Nombre de la cabecera       |\r\n| `matcher` | `*-assertion` | El comparador del fragmento |\r\n`*`: `text`, `integer` o `decimal`, dependiendo del tipo indicado en el paso.\r\n\r\n##### Ejemplos:\r\n```gherkin\r\n  Entonces el texto de la cabecera de la respuesta Content-Encoding contiene 'gzip'\r\n```\r\n```gherkin\r\n  Entonces el entero de la cabecera de la respuesta Age es mayor que 10\r\n```\r\n\r\n\r\n\r\n[oauth2]: https://datatracker.ietf.org/doc/html/rfc6749 (OAuth 2.0)\r\n[jsonschema]: https://json-schema.org/ (JSON Schema)\r\n[jsonpath]: https://goessner.net/articles/JsonPath/\r\n[xmlschema]: https://www.w3.org/2001/XMLSchema (XML Schema)\r\n[xpath]: https://en.wikipedia.org/wiki/XPath (XPath)\r\n"}},"context":{}}