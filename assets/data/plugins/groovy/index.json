{"hash":"95a896f6ad7dd2621a9b8ae80b3593e91ddbea4a","data":{"doc":{"title":"Pasos Groovy","path":"/plugins/groovy/","date":"20. January 2023","content":"<p>Este plugin proporciona un compilador de clases <code class=\"language-text\">groovy</code> y pasos para la ejecución de código <code class=\"language-text\">groovy</code>.</p>\n<div id=\"coord\" class=\"remark-code-tabs\"><label for=\"coord#0\" class=\"remark-code-tab\">\n                        <input type=\"radio\" id=coord#0 name=\"coord\" checked/> yaml\n                    </label><div class=\"remark-code-content\"><div class=\"remark-code-clipboard\"><button>\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">es.iti.wakamiti:groovy-wakamiti-plugin:2.3.3</pre><pre class=\"hidden\">es.iti.wakamiti:groovy-wakamiti-plugin:2.3.3</pre></div></div><label for=\"coord#2\" class=\"remark-code-tab\">\n                        <input type=\"radio\" id=coord#2 name=\"coord\" /> maven\n                    </label><div class=\"remark-code-content\"><div class=\"remark-code-clipboard\"><button>\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">&lt;dependency>\n  &lt;groupId>es.iti.wakamiti&lt;/groupId>\n  &lt;artifactId>groovy-wakamiti-plugin&lt;/artifactId>\n  &lt;version>2.3.3&lt;/version>\n&lt;/dependency></pre><pre class=\"hidden\">&lt;dependency&gt;\n  &lt;groupId&gt;es.iti.wakamiti&lt;/groupId&gt;\n  &lt;artifactId&gt;groovy-wakamiti-plugin&lt;/artifactId&gt;\n  &lt;version&gt;2.3.3&lt;/version&gt;\n&lt;/dependency&gt;</pre></div></div></div>\n<hr class=\"remark-code-tabs-x\" rel=\"coord#maven\" />\n<hr>\n<ul id=\"toc\">\n<li><a href=\"#compilador\">Compilador</a></li>\n<li>\n<p><a href=\"#pasos\">Pasos</a></p>\n<ul>\n<li><a href=\"#ejecutar-c%C3%B3digo\">Ejecutar código</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#propiedades-din%C3%A1micas\">Propiedades dinámicas</a></p>\n<ul>\n<li><a href=\"#propiedad-groovy\">Propiedad groovy</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"compilador\"><a href=\"#compilador\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Compilador</h2>\n<p>El compilador groovy intentará compilar cualquier fichero con extensión <code class=\"language-text\">.groovy</code> presente en el directorio (o\nsubdirectorio) de trabajo. Todas las librerías utilizadas en los ficheros <code class=\"language-text\">groovy</code> deben estar incluidas en el core de\nWakamiti, o en la configuración <a href=\"/wakamiti//wakamiti/architecture#wakamitilaunchermodules\"><code class=\"language-text\">wakamiti.launcher.modules</code></a>.</p>\n<p>Estos ficheros <code class=\"language-text\">groovy</code> se podrán utilizar como proveedor de pasos adicionales.</p>\n<h4 id=\"ejemplos\"><a href=\"#ejemplos\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ejemplos:</h4>\n<p>Creamos un fichero llamado <code class=\"language-text\">custom-steps_es.properties</code> donde definimos un nuevo paso:</p>\n<div class=\"remark-code-clipboard\"><button>\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-properties\"><span class=\"token key attr-name\">custom.step</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">se recupera la contraseña del usuario {name:text}</span></pre><pre class=\"hidden\">custom.step=se recupera la contraseña del usuario {name:text}</pre></div>\n<p>Creamos un fichero llamado <code class=\"language-text\">CustomSteps.goovy</code> donde desarrollamos el nuevo paso:</p>\n<div class=\"remark-code-clipboard\"><button>\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-groovy\"><span class=\"token keyword\">package</span> example\n\n<span class=\"token keyword\">import</span> es<span class=\"token punctuation\">.</span>iti<span class=\"token punctuation\">.</span>wakamiti<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span>I18nResource\n<span class=\"token keyword\">import</span> es<span class=\"token punctuation\">.</span>iti<span class=\"token punctuation\">.</span>wakamiti<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span>Step\n<span class=\"token keyword\">import</span> es<span class=\"token punctuation\">.</span>iti<span class=\"token punctuation\">.</span>wakamiti<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>WakamitiLogger\n<span class=\"token keyword\">import</span> imconfig<span class=\"token punctuation\">.</span>Configurable\n<span class=\"token keyword\">import</span> imconfig<span class=\"token punctuation\">.</span>Configuration\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span>Logger\n\n<span class=\"token annotation punctuation\">@I18nResource</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"custom-steps\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomSteps</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">StepContributor</span><span class=\"token punctuation\">,</span> Configurable <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> Logger log <span class=\"token operator\">=</span> WakamitiLogger<span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"es.iti.wakamiti.example\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> String username\n  <span class=\"token keyword\">private</span> String password\n  \n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>Configuration configuration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    username <span class=\"token operator\">=</span> configuration<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"credentials.username\"</span></span><span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span>\n    password <span class=\"token operator\">=</span> configuration<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"credentials.password\"</span></span><span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Step</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">\"custom.step\"</span></span><span class=\"token punctuation\">,</span> args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token interpolation-string\"><span class=\"token string\">\"name:text\"</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">customStep</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">==</span> username<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">\"Hello, {}! Your password is {}\"</span></span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> password\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></pre><pre class=\"hidden\">package example\n\nimport es.iti.wakamiti.api.annotations.I18nResource\nimport es.iti.wakamiti.api.annotations.Step\nimport es.iti.wakamiti.api.util.WakamitiLogger\nimport imconfig.Configurable\nimport imconfig.Configuration\nimport org.slf4j.Logger\n\n@I18nResource(&quot;custom-steps&quot;)\nclass CustomSteps implements StepContributor, Configurable {\n\n  private static Logger log = WakamitiLogger.forName(&quot;es.iti.wakamiti.example&quot;);\n  private String username\n  private String password\n  \n  @Override\n  void configure(Configuration configuration) {\n    username = configuration.get(&quot;credentials.username&quot;, String.class).orElse(null)\n    password = configuration.get(&quot;credentials.password&quot;, String.class).orElse(null)\n  }\n\n  @Step(value = &quot;custom.step&quot;, args = [&quot;name:text&quot;])\n  def customStep(String name) {\n    if (name == username) {\n      log.info(&quot;Hello, {}! Your password is {}&quot;, name, password)\n      return password\n    }\n  }\n}</pre></div>\n<p>Incluímos esta nueva clase en la configuración\n<a href=\"/wakamiti//wakamiti/architecture#wakamitinonRegisteredStepProviders\"><code class=\"language-text\">wakamiti.nonRegisteredStepProviders</code></a> de Wakamiti, y añadimos las\npropiedades con las credenciales de ejemplo:</p>\n<div class=\"remark-code-clipboard\"><pre class=\"language-yml\">  <span class=\"token key atrule\">nonRegisteredStepProviders</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> example.CustomSteps\n  <span class=\"token key atrule\">credentials</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> user\n    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> s3cr3t</pre></div>\n<p>Creamos un fichero <code class=\"language-text\">example.feature</code> con el paso custom:</p>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\"><span class=\"token feature\"><span class=\"token keyword\">Característica:</span><span class=\"token important\"> Ejemplo pasos custom</span>\n</span>  <span class=\"token scenario\"><span class=\"token keyword\">Escenario:</span><span class=\"token important\"> Prueba</span></span>\n    <span class=\"token atrule\">Cuando</span> se recupera la contraseña del usuario <span class=\"token string\">'user'</span></pre></div>\n<p>Al ejecutarse, se mostraría en el log:</p>\n<div class=\"remark-code-clipboard\"><pre class=\"language-text\">[e.i.w.c.r.PlanNodeLogger.logStepResult]   INFO -  [ PASSED ]  Cuando se recupera la contraseña del usuario &#39;user&#39; (0.011) \n[e.i.w.example.CustomSteps.customStep]   INFO - Hello, user! Your password is s3cr3t</pre></div>\n<hr>\n<h2 id=\"pasos\"><a href=\"#pasos\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pasos</h2>\n<h3 id=\"ejecutar-código\"><a href=\"#ejecutar-c%C3%B3digo\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ejecutar código</h3>\n<div class=\"remark-code-clipboard\"><button>\n<svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-copy-icon\">\n    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path>\n</svg>\n      <svg aria-hidden=\"true\" height=\"10\" viewBox=\"0 0 16 16\" width=\"16\" data-view-component=\"true\" class=\"clipboard-check-icon hidden\">\n    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path>\n</svg>\n                </button><pre class=\"language-text\">(que) se ejecuta el siguiente código groovy:</pre><pre class=\"hidden\">(que) se ejecuta el siguiente código groovy:</pre></div>\n<p>Ejecuta el script groovy indicado, incluyendo las siguentes variables:</p>\n<ul>\n<li><code class=\"language-text\">ctx</code>: Contexto del escenario. Se trata de un contenedor con el <code class=\"language-text\">id</code> del escenario, los resultados de los diferentes\npasos, y cualquier otra variable que se añada.</li>\n<li><code class=\"language-text\">log</code>: Logger de Wakamiti para depurar el script.</li>\n</ul>\n<h4 id=\"parámetros\"><a href=\"#par%C3%A1metros\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parámetros:</h4>\n<table>\n<thead>\n<tr>\n<th>Nombre</th>\n<th>Wakamiti type</th>\n<th>Descripción</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><code class=\"language-text\">document</code></td>\n<td>Contenido del script</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"ejemplos-1\"><a href=\"#ejemplos-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ejemplos:</h4>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\"><span class=\"token tag\">@ID-01</span>\n<span class=\"token scenario\"><span class=\"token keyword\">Escenario:</span><span class=\"token important\"> Ejemplo</span></span>\n  <span class=\"token atrule\">Cuando</span> se ejecuta el siguiente código groovy:\n    <span class=\"token pystring string\">\"\"\"groovy\n    ctx['a'] = 'something'\n    1+1\n    \"\"\"</span>\n  <span class=\"token atrule\">Y</span> se ejecuta el siguiente código groovy:\n    <span class=\"token pystring string\">\"\"\"groovy\n    log.debug(\"Context: {}\", ctx)\n    assert ctx.results[0] == 2\n    assert ctx.a == 'something'\n    assert ctx.id == 'ID-01'\n    \"\"\"</span></pre></div>\n<hr>\n<h2 id=\"propiedades-dinámicas\"><a href=\"#propiedades-din%C3%A1micas\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Propiedades dinámicas</h2>\n<h3 id=\"propiedad-groovy\"><a href=\"#propiedad-groovy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Propiedad groovy</h3>\n<p>Obtener el resultado de la ejecución de una línea de código groovy, mediante la sintaxis <code class=\"language-text\">${=[expresión]}</code>, donde\n<code class=\"language-text\">[expresión]</code> es el código groovy que se quiere ejecutar. En esta expresión también se incluye la variable <code class=\"language-text\">ctx</code>.</p>\n<h4 id=\"ejemplos-2\"><a href=\"#ejemplos-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ejemplos:</h4>\n<p>Tenemos el siguiente escenario:</p>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\"><span class=\"token tag\">@ID-01</span>\n<span class=\"token scenario\"><span class=\"token keyword\">Escenario:</span><span class=\"token important\"> Ejemplo</span></span>\n  <span class=\"token atrule\">Cuando</span> se ejecuta el script SQL del fichero <span class=\"token string\">'data/${=ctx.id}/script-${=new Date().format(\"yyyyMMdd\")}.sql'</span></pre></div>\n<p>Suponiendo que hoy es <code class=\"language-text\">20/09/2023</code>, al ejecutarse, se resolvería como:</p>\n<div class=\"remark-code-clipboard\"><pre class=\"language-gherkin\"><span class=\"token tag\">@ID-01</span>\n<span class=\"token scenario\"><span class=\"token keyword\">Escenario:</span><span class=\"token important\"> Ejemplo</span></span>\n  <span class=\"token atrule\">Cuando</span> se ejecuta el script SQL del fichero <span class=\"token string\">'data/ID-01/script-20230920.sql'</span></pre></div>\n"}},"context":{"id":"5505f8329c43abb0ab147268d22251e4","path":"/plugins/groovy/","locale":"es"}}