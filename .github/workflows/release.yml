name: Release a new tagged version
on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: 'Tag name that the major tag will point to'
        required: true

env:
  TAG_NAME: ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }}

jobs:
  get-env:
    name: Get Environment vars
    runs-on: ubuntu-latest
    outputs:
      TAG_NAME: ${{ env.TAG_NAME }}
    steps:
      - run: |
          echo TITLE=$( echo "${{ github.event.release.name }}" | sed -r 's/([\])/\\\1/g' ) >> $GITHUB_OUTPUT
          echo BODY=$( cat << "EOF" \
            ${{ github.event.release.body }} \
          EOF | sed -r 's/([\])/\\\1/g' ) >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: [get-env]
    if: ${{ startsWith(needs.get-env.outputs.TAG_NAME, 'v') || contains(needs.get-env.outputs.TAG_NAME, '-plugin-v') }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: ./mvnw -B install -DskipTests -ntp

      - name: Publish Docker tagged version and latest version
        run: |
          ./mvnw -B deploy -DskipTests -ntp -pl wakamiti-engine/wakamiti-docker -P release,-default \
          -Ddocker.pwd=${{ secrets.WAKAMITI_DOCKER_PWD }}

      - name: Stage JARs into Maven Central Repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PWD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
        run: |
          ./mvnw -B -P sonatype deploy -ntp -DskipTests=true -e \
            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
            -DaltDeploymentRepository=ossrh::default::https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/ \
            -Dsonar.organization=iti-ict \
            -Dsonar.host.url=https://sonarcloud.io

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: ${{ success() }}
        with:
          webhook_url: ${{ secrets.TEAMS_WEBHOOK }}
          raw: >-
            {
                "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                "body": [
                    {
                        "size": "extraLarge",
                        "style": "heading",
                        "text": "Release ${{ needs.get-env.outputs.TITLE }} created! ðŸŽ‰",
                        "type": "TextBlock",
                        "weight": "bolder",
                        "wrap": true
                    },
                    {
                        "text": "${{ needs.get-env.outputs.BODY }}",
                        "type": "TextBlock",
                        "wrap": true
                    }
                ],
                "type": "AdaptiveCard",
                "version": "1.6"
            }
